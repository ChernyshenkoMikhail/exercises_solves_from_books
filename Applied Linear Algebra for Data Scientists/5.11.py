'''

Диагональные матрицы обладают многими интересными свойствами, ко-
торые делают их полезными для работы. В данном упражнении вы узнаете 
о двух из этих свойств:
 предпозиционное умножение диагональной матрицы на матрицу-
сомножитель шкалирует строки правой матрицы на соответствующие 
диагональные элементы;
 постпозиционное умножение диагональной матрицы на матрицу-
сомножитель шкалирует столбцы левой матрицы на соответствующие 
диагональные элементы.
Этот факт используется в нескольких приложениях, включая вычисление 
матриц корреляций (глава 7) и диагонализацию матриц (главы 13 и 14).
Давайте обследуем последствия этих свойств. Начнем с создания трех матриц 4×4:
матрицы из одних единиц (подсказка: np.ones()); диагональной 
матрицы, в которой диагональные элементы равны 1, 4, 9 и 16; и диагональ-
ной матрицы, равной квадратному корню из предыдущей диагональной матрицы.
Далее распечатайте матрицу единиц, пред- и постпозиционно умножен-
ную на первую диагональную матрицу-сомножитель.
Наконец, предпозиционно и постпозиционно умножьте матрицу единиц 
на матрицу квадратных корней из диагональной матрицы.
Обратите внимание, что строки и  столбцы прошкалированы таким об-
разом, что (i, j)-й элемент в матрице умножается на произведение i-го и j-го 
диагональных элементов. (На самом деле мы создали таблицу умножения!)

'''

import numpy as np

#1. Создаем матрицу из единиц 4x4
ones_matrix = np.ones((4, 4))
print("Матрица из единиц:")
print(ones_matrix)
print()

#2. Создаем диагональную матрицу с элементами 1, 4, 9, 16
diag_elements = np.array([1, 4, 9, 16])
diag_matrix = np.diag(diag_elements)
print("Диагональная матрица:")
print(diag_matrix)
print()

#3. Создаем диагональную матрицу из квадратных корней
sqrtdiagmatrix = np.diag(np.sqrt(diag_elements))
print("Диагональная матрица из квадратных корней:")
print(sqrtdiagmatrix)
print()

#4. Предпозиционное умножение (умножение слева)
#Умножает каждую строку на соответствующий диагональный элемент
left_mult = diag_matrix @ ones_matrix
print("Предпозиционное умножение (диагональная матрица слева):")
print(left_mult)
print()

#5. Постпозиционное умножение (умножение справа)
#Умножает каждый столбец на соответствующий диагональный элемент
right_mult = ones_matrix @ diag_matrix
print("Постпозиционное умножение (диагональная матрица справа):")
print(right_mult)
print()

#6. Пред- и постпозиционное умножение на матрицу квадратных корней
#Эквивалентно умножению i-й строки на sqrt(di) и j-го столбца на sqrt(dj)
combined_mult = sqrtdiagmatrix @ ones_matrix @ sqrtdiagmatrix
print("Комбинированное умножение (пред- и постпозиционное на sqrt-матрицу):")
print(combined_mult)